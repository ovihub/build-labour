{
    "openapi": "3.0.0",
    "info": {
        "title": "Build Labour Api",
        "description": "A product of Appetiser",
        "contact": {
            "name": "API Support",
            "email": "dennis.agulo@appetiser.com.au"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Base Endpoint"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user. Authenticate credentials and returns a token.",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiAuthController::login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email Address",
                                        "type": "string",
                                        "example": "testuser@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid Credentials"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Login Success"
                    }
                },
                "security": []
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register user. Creates new user, sends 'thank you' email and returns a token.",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiAuthController::register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email Address",
                                        "type": "string",
                                        "example": "testuser@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm Password",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "first_name": {
                                        "description": "First Name",
                                        "type": "string",
                                        "example": "Jane"
                                    },
                                    "last_name": {
                                        "description": "Last Name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "dob": {
                                        "description": "Date of Birth (Y-m-d)",
                                        "type": "date",
                                        "example": "1991-01-01"
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "example": "Australia"
                                    },
                                    "mobile_number": {
                                        "description": "Mobile Number",
                                        "type": "string",
                                        "example": "+61 412345678"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "85 Dover Street Melbourne VIC"
                                    },
                                    "role_id": {
                                        "description": "Job role",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "201": {
                        "description": "Request Created"
                    }
                },
                "security": []
            }
        },
        "/auth/email/check": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check email if exists. Used as a first step in user registration",
                "description": "",
                "operationId": "",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user's information",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiAuthController::getAuthUser",
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "Token Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Authenticated User"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/auth/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify a user after registration ",
                "description": "A 6 character verification code will be sent through email",
                "operationId": "",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "uid": {
                                        "description": "<b>Required</b> User ID",
                                        "type": "string",
                                        "example": "141203"
                                    },
                                    "verification_code": {
                                        "description": "<b>Required</b> Verification Code",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/auth/verification/resend": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend verification code",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiAuthController::resendVerificationCode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email Address",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "400": {
                        "description": "Invalid Token / Bad Request"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "User Not Found / Token Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiAuthController::logout",
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "Token Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Logout Success"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/chat/send": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send a chat message",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\ApiChatController::send",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "channel_id": {
                                        "description": "<b>Required</b><br /> Channel ID where message will be sent",
                                        "type": "integer"
                                    },
                                    "message": {
                                        "description": "<b>Required</b><br /> Chat message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/chat/reset_unread": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Given a channel id, reset the unread count of the user",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\ApiChatController::resetUnread",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "channel_id": {
                                        "description": "<b>Required</b><br /> Channel ID ",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/chat/unread/count": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get the number of channels that has unread messages",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\ApiChatController::unReadCount",
                "responses": {
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/chat/history": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get the number of channels that has unread messages",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\ApiChatController::historyByChannel",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "query",
                        "description": "Channel ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Date format (yyyy-mm-dd hh:ii:ss). Returns only the messages after the given date ",
                        "required": false,
                        "schema": {
                            "type": "dateTime"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of messages returned per query. Max 200",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Offset to query older messages",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/device/register": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Register an Android, iOS or web device for push notifications and chat. Auth Bearer authentication",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiDevicesController::registerDevice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "device_token": {
                                        "description": "<b>Required</b><br />Device token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/device/unregister": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Unregister an Android, iOS or web device for push notifications and chat. Auth Bearer authentication",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiDevicesController::unregisterDevice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "device_token": {
                                        "description": "<b>Required</b><br />Device token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/password/email": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Send reset password email with token",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiPasswordResetsController::sendResetCodeEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email Address",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": []
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Reset user's password",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiPasswordResetsController::resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email Address",
                                        "type": "string"
                                    },
                                    "token": {
                                        "description": "Reset Token",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm Password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "404": {
                        "description": "Reset Token Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": []
            }
        },
        "/notification/test": {
            "post": {
                "tags": [
                    "Push Notifications"
                ],
                "summary": "Test send a message. Auth Bearer authentication",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiPushNotificationsController::test",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "device_token": {
                                        "description": "<b>Required</b><br />Device token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Invalid Input"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get Roles by List",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiRolesController::index",
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "Token Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": ""
                    }
                },
                "security": []
            }
        },
        "/user": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user's information",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiUsersController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First Name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Last Name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "country": {
                                        "description": "Country",
                                        "type": "string",
                                        "example": "Philippines"
                                    },
                                    "mobile_number": {
                                        "description": "Mobile Number",
                                        "type": "string",
                                        "example": "+63 9277468888"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "216 Cabreros Street Cebu City"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "User Not Found / Token Not Found"
                    },
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/photo": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upload profile photo",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiUsersController::uploadProfilePhoto",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "photo": {
                                        "description": "Image File",
                                        "type": "string",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "Token Not Found"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/work/experience": {
            "post": {
                "tags": [
                    "Work"
                ],
                "summary": "Add a work experience",
                "operationId": "App\\Http\\Controllers\\API\\V1\\ApiWorksController::addWorkExperience",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "job_role": {
                                        "description": "<b>Required</b> Job Role",
                                        "type": "string",
                                        "example": "Developer"
                                    },
                                    "company_name": {
                                        "description": "<b>Required</b> Company",
                                        "type": "string",
                                        "example": "Appetiser"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid Token"
                    },
                    "401": {
                        "description": "Token Expired"
                    },
                    "404": {
                        "description": "Token Not Found"
                    },
                    "422": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Request OK"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}